buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'org.ownjoo.notes'
version = '0.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
}

dependencies {
	compileOnly('org.projectlombok:lombok')

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')

	testCompile('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')

	runtime('com.h2database:h2')
}

def jsRoot = "src/main/js/"

task buildJS(type: Exec) {
	commandLine "cmd", "/c", "cd ${jsRoot} && yarn build"
	standardOutput = new ByteArrayOutputStream()

	//extension method buildJS.output() can be used to obtain the output:
	ext.output = {
		return standardOutput.toString()
	}
	doLast {
		println(standardOutput);
	}
}

task buildAndMoveJS(type: Exec) {
	commandLine "cmd", "/c", "cd ${jsRoot} && yarn buildAndMove"
	standardOutput = new ByteArrayOutputStream()

	//extension method buildAndMoveJS.output() can be used to obtain the output:
	ext.output = {
		return standardOutput.toString()
	}
	doLast {
		println(standardOutput);
	}
}

build.dependsOn(buildAndMoveJS)
